{"ast":null,"code":"var _jsxFileName = \"/Users/galenholgate/Desktop/TwitchCRUDProject/client/src/components/WordCloud/WordCloud.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport styles from './styles.module';\nimport { TagCloud } from 'react-tagcloud';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const WordCloud = (user, id) => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const hash = {};\n  console.log('id', id, 'user', user);\n  useEffect(() => {\n    (async () => {\n      try {\n        const response = await Axios.get('http://localhost:3001/messages', {\n          params: {\n            id: user.id\n          }\n        });\n        console.log('useEffect async wC', response);\n\n        if (response.status === 200) {\n          setData([]);\n          console.log(user, id);\n          let currentMessages = response.data;\n\n          for (let i = 0; i < currentMessages.length; i++) {\n            currentMessages[i].message.split(' ').forEach(el => {\n              hash[el] = (hash[el] || 0) + 1;\n            });\n          }\n\n          let counter = 0;\n\n          for (const prop in hash) {\n            if (hash[prop] > 10 && prop.length > 1 && prop !== 'is' && prop !== 'to' && prop !== 'it' && prop !== 'of' && prop !== 'in' && prop !== 'are' && prop !== 'you' && prop !== 'the' && prop !== 'so' && prop !== 'or' && prop !== 'on' && prop !== 'be' && prop !== 'at' && prop !== 'do' && prop !== 'my' && prop !== 'and' && prop !== 'if') {\n              let newObj = {\n                value: prop,\n                count: hash[prop],\n                key: String(counter)\n              };\n              setData(oldArr => [...oldArr, newObj]);\n              counter++;\n              console.log('setstate data', data);\n              console.log(user);\n            }\n          }\n\n          return true;\n        }\n\n        return false;\n      } catch (err) {\n        console.log(err);\n        throw new Error(err);\n      }\n    })();\n  }, [user]);\n  data.sort((a, b) => a.count < b.count ? 1 : -1);\n  data.splice(50);\n  console.log(data);\n\n  const SimpleCloud = () => {\n    if (data.length > 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(TagCloud, {\n          minSize: 20,\n          maxSize: 55,\n          tags: data,\n          shuffle: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \" Not enough data to render wordcloud \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: styles.main,\n      children: \" Most common words \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), ' ', /*#__PURE__*/_jsxDEV(TagCloud, {\n      minSize: 20,\n      maxSize: 100,\n      tags: data,\n      shuffle: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WordCloud, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n\n_c = WordCloud;\nexport const WordCloudMemo = /*#__PURE__*/React.memo(WordCloud);\n_c2 = WordCloudMemo;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"WordCloud\");\n$RefreshReg$(_c2, \"WordCloudMemo\");","map":{"version":3,"names":["React","useEffect","useState","Axios","useSelector","styles","TagCloud","WordCloud","user","id","data","setData","hash","console","log","response","get","params","status","currentMessages","i","length","message","split","forEach","el","counter","prop","newObj","value","count","key","String","oldArr","err","Error","sort","a","b","splice","SimpleCloud","main","WordCloudMemo","memo"],"sources":["/Users/galenholgate/Desktop/TwitchCRUDProject/client/src/components/WordCloud/WordCloud.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport styles from './styles.module';\n\nimport { TagCloud } from 'react-tagcloud';\n\nexport const WordCloud = (user, id) => {\n  const [data, setData] = useState([]);\n\n  const hash = {};\n  console.log('id', id, 'user', user);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const response = await Axios.get(\n          'http://localhost:3001/messages',\n          {\n            params: {\n              id: user.id,\n            },\n          },\n        );\n        console.log('useEffect async wC', response);\n        if (response.status === 200) {\n          setData([]);\n          console.log(user, id);\n          let currentMessages = response.data;\n\n          for (let i = 0; i < currentMessages.length; i++) {\n            currentMessages[i].message.split(' ').forEach(el => {\n              hash[el] = (hash[el] || 0) + 1;\n            });\n          }\n          let counter = 0;\n          for (const prop in hash) {\n            if (\n              hash[prop] > 10 &&\n              prop.length > 1 &&\n              prop !== 'is' &&\n              prop !== 'to' &&\n              prop !== 'it' &&\n              prop !== 'of' &&\n              prop !== 'in' &&\n              prop !== 'are' &&\n              prop !== 'you' &&\n              prop !== 'the' &&\n              prop !== 'so' &&\n              prop !== 'or' &&\n              prop !== 'on' &&\n              prop !== 'be' &&\n              prop !== 'at' &&\n              prop !== 'do' &&\n              prop !== 'my' &&\n              prop !== 'and' &&\n              prop !== 'if'\n            ) {\n              let newObj = {\n                value: prop,\n                count: hash[prop],\n                key: String(counter),\n              };\n              setData(oldArr => [...oldArr, newObj]);\n              counter++;\n              console.log('setstate data', data);\n              console.log(user);\n            }\n          }\n          return true;\n        }\n        return false;\n      } catch (err) {\n        console.log(err);\n        throw new Error(err);\n      }\n    })();\n  }, [user]);\n\n  data.sort((a, b) => (a.count < b.count ? 1 : -1));\n  data.splice(50);\n  console.log(data);\n  const SimpleCloud = () => {\n    if (data.length > 0) {\n      return (\n        <div>\n          <TagCloud\n            minSize={20}\n            maxSize={55}\n            tags={data}\n            shuffle={false}\n          />\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <h2> Not enough data to render wordcloud </h2>\n        </div>\n      );\n    }\n  };\n\n  return (\n    <div>\n      <h2 className={styles.main}> Most common words </h2>{' '}\n      <TagCloud minSize={20} maxSize={100} tags={data} shuffle={false} />\n    </div>\n  );\n};\n\nexport const WordCloudMemo = React.memo(WordCloud);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}