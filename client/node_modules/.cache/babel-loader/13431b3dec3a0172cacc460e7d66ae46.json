{"ast":null,"code":"var _jsxFileName = \"/Users/galenholgate/Desktop/TwitchCRUDProject/client/src/components/WordCloud/WordCloud.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport { TagCloud } from 'react-tagcloud';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const WordCloud = (user, id) => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const hash = {};\n  useEffect(() => {\n    (async () => {\n      try {\n        const response = await Axios.get('http://localhost:3001/messages', {\n          params: {\n            user: user,\n            id: 106\n          }\n        });\n        console.log('useEffect async wC', response);\n\n        if (response.status === 200) {\n          setData([]);\n          console.log(user, id);\n          let currentMessages = response.data;\n\n          for (let i = 0; i < currentMessages.length; i++) {\n            currentMessages[i].message.split(' ').forEach(el => {\n              hash[el] = (hash[el] || 0) + 1;\n            });\n          }\n\n          let counter = 0;\n\n          for (const prop in hash) {\n            if (hash[prop] > 3 && prop.length > 1) {\n              let newObj = {\n                value: prop,\n                count: hash[prop],\n                key: String(counter)\n              };\n              setData(oldArr => [...oldArr, newObj]);\n              counter++;\n              console.log('setstate data', data);\n              console.log(user);\n            }\n          }\n\n          return true;\n        }\n\n        return false;\n      } catch (err) {\n        console.log(err);\n        throw new Error(err);\n      }\n    })();\n  }, [user]);\n  console.log(data);\n\n  const SimpleCloud = () => {\n    if (data.length > 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(TagCloud, {\n          minSize: 20,\n          maxSize: 55,\n          tags: data,\n          shuffle: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \" Not enough data to render wordcloud \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [' ', /*#__PURE__*/_jsxDEV(TagCloud, {\n      minSize: 20,\n      maxSize: 55,\n      tags: data,\n      shuffle: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WordCloud, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n\n_c = WordCloud;\nexport const WordCloudMemo = /*#__PURE__*/React.memo(WordCloud);\n_c2 = WordCloudMemo;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"WordCloud\");\n$RefreshReg$(_c2, \"WordCloudMemo\");","map":{"version":3,"names":["React","useEffect","useState","Axios","useSelector","TagCloud","WordCloud","user","id","data","setData","hash","response","get","params","console","log","status","currentMessages","i","length","message","split","forEach","el","counter","prop","newObj","value","count","key","String","oldArr","err","Error","SimpleCloud","WordCloudMemo","memo"],"sources":["/Users/galenholgate/Desktop/TwitchCRUDProject/client/src/components/WordCloud/WordCloud.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Axios from 'axios';\nimport { useSelector } from 'react-redux';\n\nimport { TagCloud } from 'react-tagcloud';\n\nexport const WordCloud = (user, id) => {\n  const [data, setData] = useState([]);\n\n  const hash = {};\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const response = await Axios.get(\n          'http://localhost:3001/messages',\n          {\n            params: {\n              user: user,\n              id: 106,\n            },\n          },\n        );\n        console.log('useEffect async wC', response);\n        if (response.status === 200) {\n          setData([]);\n          console.log(user, id);\n          let currentMessages = response.data;\n\n          for (let i = 0; i < currentMessages.length; i++) {\n            currentMessages[i].message.split(' ').forEach(el => {\n              hash[el] = (hash[el] || 0) + 1;\n            });\n          }\n          let counter = 0;\n          for (const prop in hash) {\n            if (hash[prop] > 3 && prop.length > 1) {\n              let newObj = {\n                value: prop,\n                count: hash[prop],\n                key: String(counter),\n              };\n              setData(oldArr => [...oldArr, newObj]);\n              counter++;\n              console.log('setstate data', data);\n              console.log(user);\n            }\n          }\n          return true;\n        }\n        return false;\n      } catch (err) {\n        console.log(err);\n        throw new Error(err);\n      }\n    })();\n  }, [user]);\n  console.log(data);\n  const SimpleCloud = () => {\n    if (data.length > 0) {\n      return (\n        <div>\n          <TagCloud\n            minSize={20}\n            maxSize={55}\n            tags={data}\n            shuffle={false}\n          />\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <h2> Not enough data to render wordcloud </h2>\n        </div>\n      );\n    }\n  };\n\n  return (\n    <div>\n      {' '}\n      <TagCloud minSize={20} maxSize={55} tags={data} shuffle={false} />\n    </div>\n  );\n};\n\nexport const WordCloudMemo = React.memo(WordCloud);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}