{"ast":null,"code":"var _jsxFileName = \"/Users/galenholgate/Desktop/TwitchCRUDProject/client/src/components/WordCloud/WordCloud.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { TagCloud } from 'react-tagcloud';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const WordCloud = user => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [data, setData] = useState([]);\n  const hash = {};\n\n  _s(useEffect(_s(() => {\n    _s();\n\n    let currentMessages = useSelector(state => state.messages.messageList);\n    setData([]);\n\n    for (let i = 0; i < currentMessages.length; i++) {\n      currentMessages[i].message.split(' ').forEach(el => {\n        hash[el] = (hash[el] || 0) + 1;\n      });\n    }\n\n    let counter = 0;\n\n    for (const prop in hash) {\n      if (hash[prop] > 5 && prop.length > 1) {\n        let newObj = {\n          value: prop,\n          count: hash[prop],\n          key: String(counter)\n        };\n        setData(oldArr => [...oldArr, newObj]);\n        counter++;\n        console.log('setstate data', data);\n      }\n    }\n  }, \"TbjcCkDrbAA6ztb2XOm731Yg07k=\", false, function () {\n    return [useSelector];\n  }), []), \"TbjcCkDrbAA6ztb2XOm731Yg07k=\", false, function () {\n    return [useSelector];\n  });\n\n  console.log('WORDCLOUD DATA', data);\n\n  const SimpleCloud = () => {\n    if (data.length > 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(TagCloud, {\n          minSize: 20,\n          maxSize: 55,\n          tags: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \" Loading Wordcloud... \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [' ', /*#__PURE__*/_jsxDEV(SimpleCloud, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(WordCloud, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n\n_c = WordCloud;\n\nvar _c;\n\n$RefreshReg$(_c, \"WordCloud\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","TagCloud","WordCloud","user","data","setData","hash","currentMessages","state","messages","messageList","i","length","message","split","forEach","el","counter","prop","newObj","value","count","key","String","oldArr","console","log","SimpleCloud"],"sources":["/Users/galenholgate/Desktop/TwitchCRUDProject/client/src/components/WordCloud/WordCloud.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport { useSelector } from 'react-redux';\n\nimport { TagCloud } from 'react-tagcloud';\n\nexport const WordCloud = user => {\n  const [data, setData] = useState([]);\n\n  const hash = {};\n\n  useEffect(() => {\n    let currentMessages = useSelector(state => state.messages.messageList);\n    setData([]);\n    for (let i = 0; i < currentMessages.length; i++) {\n      currentMessages[i].message.split(' ').forEach(el => {\n        hash[el] = (hash[el] || 0) + 1;\n      });\n    }\n    let counter = 0;\n    for (const prop in hash) {\n      if (hash[prop] > 5 && prop.length > 1) {\n        let newObj = {\n          value: prop,\n          count: hash[prop],\n          key: String(counter),\n        };\n        setData(oldArr => [...oldArr, newObj]);\n        counter++;\n        console.log('setstate data', data);\n      }\n    }\n  }, []);\n\n  console.log('WORDCLOUD DATA', data);\n  const SimpleCloud = () => {\n    if (data.length > 0) {\n      return (\n        <div>\n          <TagCloud minSize={20} maxSize={55} tags={data} />\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <h2> Loading Wordcloud... </h2>\n        </div>\n      );\n    }\n  };\n\n  return (\n    <div>\n      {' '}\n      <SimpleCloud />\n    </div>\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,QAAT,QAAyB,gBAAzB;;AAEA,OAAO,MAAMC,SAAS,GAAGC,IAAI,IAAI;EAAA;;EAAA;;EAC/B,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;EAEA,MAAMO,IAAI,GAAG,EAAb;;EAEA,GAAAR,SAAS,IAAC,MAAM;IAAA;;IACd,IAAIS,eAAe,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACC,QAAN,CAAeC,WAAzB,CAAjC;IACAL,OAAO,CAAC,EAAD,CAAP;;IACA,KAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,eAAe,CAACK,MAApC,EAA4CD,CAAC,EAA7C,EAAiD;MAC/CJ,eAAe,CAACI,CAAD,CAAf,CAAmBE,OAAnB,CAA2BC,KAA3B,CAAiC,GAAjC,EAAsCC,OAAtC,CAA8CC,EAAE,IAAI;QAClDV,IAAI,CAACU,EAAD,CAAJ,GAAW,CAACV,IAAI,CAACU,EAAD,CAAJ,IAAY,CAAb,IAAkB,CAA7B;MACD,CAFD;IAGD;;IACD,IAAIC,OAAO,GAAG,CAAd;;IACA,KAAK,MAAMC,IAAX,IAAmBZ,IAAnB,EAAyB;MACvB,IAAIA,IAAI,CAACY,IAAD,CAAJ,GAAa,CAAb,IAAkBA,IAAI,CAACN,MAAL,GAAc,CAApC,EAAuC;QACrC,IAAIO,MAAM,GAAG;UACXC,KAAK,EAAEF,IADI;UAEXG,KAAK,EAAEf,IAAI,CAACY,IAAD,CAFA;UAGXI,GAAG,EAAEC,MAAM,CAACN,OAAD;QAHA,CAAb;QAKAZ,OAAO,CAACmB,MAAM,IAAI,CAAC,GAAGA,MAAJ,EAAYL,MAAZ,CAAX,CAAP;QACAF,OAAO;QACPQ,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BtB,IAA7B;MACD;IACF;EACF,CArBQ;IAAA,QACeJ,WADf;EAAA,IAqBN,EArBM,CAAT;IAAA,QACwBA,WADxB;EAAA;;EAuBAyB,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BtB,IAA9B;;EACA,MAAMuB,WAAW,GAAG,MAAM;IACxB,IAAIvB,IAAI,CAACQ,MAAL,GAAc,CAAlB,EAAqB;MACnB,oBACE;QAAA,uBACE,QAAC,QAAD;UAAU,OAAO,EAAE,EAAnB;UAAuB,OAAO,EAAE,EAAhC;UAAoC,IAAI,EAAER;QAA1C;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF;IAKD,CAND,MAMO;MACL,oBACE;QAAA,uBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF;IAKD;EACF,CAdD;;EAgBA,oBACE;IAAA,WACG,GADH,eAEE,QAAC,WAAD;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD,CAnDM;;IAAMF,S;;KAAAA,S"},"metadata":{},"sourceType":"module"}