{"ast":null,"code":"var _jsxFileName = \"/Users/galenholgate/Desktop/TwitchCRUDProject/client/src/components/WordCloud/WordCloud.js\",\n    _s = $RefreshSig$();\n\nimport styles from './styles.module.css';\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useNavigate, useParams, useLocation } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getMessageList, liveMessageUpdateAsync, getMessageListAsync } from 'features/messagesSlice';\nimport { io } from 'socket.io-client';\nimport { current } from 'immer';\nimport { store } from 'store';\nimport { TagCloud } from 'react-tagcloud';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const WordCloud = () => {\n  _s();\n\n  let currentMessages = useSelector(state => state.messages.messageList);\n  const hash = {};\n  const data = [];\n  useEffect(() => {\n    setTimeout(() => {\n      for (let i = 0; i < currentMessages.length; i++) {\n        currentMessages[i].message.split(' ').forEach(el => {\n          hash[el] = (hash[el] || 0) + 1;\n        });\n      }\n\n      for (const prop in hash) {\n        if (hash[prop] > 10) {\n          data.push({\n            value: prop,\n            count: hash[prop]\n          });\n        }\n      }\n\n      console.log(data);\n    }, 1000);\n  });\n  console.log('TAGCLOUD', hash, data, currentMessages);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TagCloud, {\n      minSize: 12,\n      maxSize: 35,\n      tags: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), ' ']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WordCloud, \"DRu3SWwfCaYypMqxUZkTVEe+jbk=\", false, function () {\n  return [useSelector];\n});\n\n_c = WordCloud;\n\nvar _c;\n\n$RefreshReg$(_c, \"WordCloud\");","map":{"version":3,"names":["styles","React","useEffect","useState","useRef","useNavigate","useParams","useLocation","useDispatch","useSelector","getMessageList","liveMessageUpdateAsync","getMessageListAsync","io","current","store","TagCloud","WordCloud","currentMessages","state","messages","messageList","hash","data","setTimeout","i","length","message","split","forEach","el","prop","push","value","count","console","log"],"sources":["/Users/galenholgate/Desktop/TwitchCRUDProject/client/src/components/WordCloud/WordCloud.js"],"sourcesContent":["import styles from './styles.module.css';\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useNavigate, useParams, useLocation } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  getMessageList,\n  liveMessageUpdateAsync,\n  getMessageListAsync,\n} from 'features/messagesSlice';\nimport { io } from 'socket.io-client';\nimport { current } from 'immer';\nimport { store } from 'store';\nimport { TagCloud } from 'react-tagcloud';\n\nexport const WordCloud = () => {\n  let currentMessages = useSelector(state => state.messages.messageList);\n\n  const hash = {};\n  const data = [];\n  useEffect(() => {\n    setTimeout(() => {\n      for (let i = 0; i < currentMessages.length; i++) {\n        currentMessages[i].message.split(' ').forEach(el => {\n          hash[el] = (hash[el] || 0) + 1;\n        });\n      }\n      for (const prop in hash) {\n        if (hash[prop] > 10) {\n          data.push({ value: prop, count: hash[prop] });\n        }\n      }\n      console.log(data);\n    }, 1000);\n  });\n  console.log('TAGCLOUD', hash, data, currentMessages);\n  return (\n    <div>\n      <TagCloud minSize={12} maxSize={35} tags={data} />{' '}\n    </div>\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,WAAjC,QAAoD,kBAApD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACEC,cADF,EAEEC,sBAFF,EAGEC,mBAHF,QAIO,wBAJP;AAKA,SAASC,EAAT,QAAmB,kBAAnB;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,KAAT,QAAsB,OAAtB;AACA,SAASC,QAAT,QAAyB,gBAAzB;;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;EAAA;;EAC7B,IAAIC,eAAe,GAAGT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACC,QAAN,CAAeC,WAAzB,CAAjC;EAEA,MAAMC,IAAI,GAAG,EAAb;EACA,MAAMC,IAAI,GAAG,EAAb;EACArB,SAAS,CAAC,MAAM;IACdsB,UAAU,CAAC,MAAM;MACf,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,eAAe,CAACQ,MAApC,EAA4CD,CAAC,EAA7C,EAAiD;QAC/CP,eAAe,CAACO,CAAD,CAAf,CAAmBE,OAAnB,CAA2BC,KAA3B,CAAiC,GAAjC,EAAsCC,OAAtC,CAA8CC,EAAE,IAAI;UAClDR,IAAI,CAACQ,EAAD,CAAJ,GAAW,CAACR,IAAI,CAACQ,EAAD,CAAJ,IAAY,CAAb,IAAkB,CAA7B;QACD,CAFD;MAGD;;MACD,KAAK,MAAMC,IAAX,IAAmBT,IAAnB,EAAyB;QACvB,IAAIA,IAAI,CAACS,IAAD,CAAJ,GAAa,EAAjB,EAAqB;UACnBR,IAAI,CAACS,IAAL,CAAU;YAAEC,KAAK,EAAEF,IAAT;YAAeG,KAAK,EAAEZ,IAAI,CAACS,IAAD;UAA1B,CAAV;QACD;MACF;;MACDI,OAAO,CAACC,GAAR,CAAYb,IAAZ;IACD,CAZS,EAYP,IAZO,CAAV;EAaD,CAdQ,CAAT;EAeAY,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBd,IAAxB,EAA8BC,IAA9B,EAAoCL,eAApC;EACA,oBACE;IAAA,wBACE,QAAC,QAAD;MAAU,OAAO,EAAE,EAAnB;MAAuB,OAAO,EAAE,EAAhC;MAAoC,IAAI,EAAEK;IAA1C;MAAA;MAAA;MAAA;IAAA,QADF,EACqD,GADrD;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CA1BM;;GAAMN,S;UACWR,W;;;KADXQ,S"},"metadata":{},"sourceType":"module"}