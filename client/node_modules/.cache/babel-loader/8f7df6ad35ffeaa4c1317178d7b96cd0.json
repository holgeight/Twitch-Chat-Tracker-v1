{"ast":null,"code":"var _jsxFileName = \"/Users/galenholgate/Desktop/TwitchCRUDProject/client/src/components/WordCloud/WordCloud.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { TagCloud } from 'react-tagcloud';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const WordCloud = () => {\n  _s();\n\n  let currentMessages = useSelector(state => state.messages.messageList);\n  const [data, setData] = useState([]);\n  const hash = {};\n  useEffect(() => {\n    for (let i = 0; i < currentMessages.length; i++) {\n      currentMessages[i].message.split(' ').forEach(el => {\n        hash[el] = (hash[el] || 0) + 1;\n      });\n    }\n\n    let counter = 0;\n\n    for (const prop in hash) {\n      if (hash[prop] > 5) {\n        let newObj = {\n          value: prop,\n          count: hash[prop],\n          key: String(counter)\n        };\n        setData(oldArr => [...oldArr, newObj]);\n        counter++;\n        console.log('setstate data', data);\n      }\n    }\n  }, []);\n  setTimeout(() => {\n    console.log(data);\n  }, 5000);\n\n  const SimpleCloud = () => {\n    if (data.length > 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(TagCloud, {\n          minSize: 12,\n          maxSize: 35,\n          tags: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \" Loading Wordcloud... \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [' ', /*#__PURE__*/_jsxDEV(SimpleCloud, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WordCloud, \"K5xRoIVAtbVlrs3JqUPskasaZsM=\", false, function () {\n  return [useSelector];\n});\n\n_c = WordCloud;\n\nvar _c;\n\n$RefreshReg$(_c, \"WordCloud\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","TagCloud","WordCloud","currentMessages","state","messages","messageList","data","setData","hash","i","length","message","split","forEach","el","counter","prop","newObj","value","count","key","String","oldArr","console","log","setTimeout","SimpleCloud"],"sources":["/Users/galenholgate/Desktop/TwitchCRUDProject/client/src/components/WordCloud/WordCloud.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport { useSelector } from 'react-redux';\n\nimport { TagCloud } from 'react-tagcloud';\n\nexport const WordCloud = () => {\n  let currentMessages = useSelector(state => state.messages.messageList);\n\n  const [data, setData] = useState([]);\n\n  const hash = {};\n\n  useEffect(() => {\n    for (let i = 0; i < currentMessages.length; i++) {\n      currentMessages[i].message.split(' ').forEach(el => {\n        hash[el] = (hash[el] || 0) + 1;\n      });\n    }\n    let counter = 0;\n    for (const prop in hash) {\n      if (hash[prop] > 5) {\n        let newObj = {\n          value: prop,\n          count: hash[prop],\n          key: String(counter),\n        };\n        setData(oldArr => [...oldArr, newObj]);\n        counter++;\n        console.log('setstate data', data);\n      }\n    }\n  }, []);\n\n  setTimeout(() => {\n    console.log(data);\n  }, 5000);\n  const SimpleCloud = () => {\n    if (data.length > 0) {\n      return (\n        <div>\n          <TagCloud minSize={12} maxSize={35} tags={data} />\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <h2> Loading Wordcloud... </h2>\n        </div>\n      );\n    }\n  };\n\n  return (\n    <div>\n      {' '}\n      <SimpleCloud />\n    </div>\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,QAAT,QAAyB,gBAAzB;;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;EAAA;;EAC7B,IAAIC,eAAe,GAAGH,WAAW,CAACI,KAAK,IAAIA,KAAK,CAACC,QAAN,CAAeC,WAAzB,CAAjC;EAEA,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;EAEA,MAAMU,IAAI,GAAG,EAAb;EAEAX,SAAS,CAAC,MAAM;IACd,KAAK,IAAIY,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,eAAe,CAACQ,MAApC,EAA4CD,CAAC,EAA7C,EAAiD;MAC/CP,eAAe,CAACO,CAAD,CAAf,CAAmBE,OAAnB,CAA2BC,KAA3B,CAAiC,GAAjC,EAAsCC,OAAtC,CAA8CC,EAAE,IAAI;QAClDN,IAAI,CAACM,EAAD,CAAJ,GAAW,CAACN,IAAI,CAACM,EAAD,CAAJ,IAAY,CAAb,IAAkB,CAA7B;MACD,CAFD;IAGD;;IACD,IAAIC,OAAO,GAAG,CAAd;;IACA,KAAK,MAAMC,IAAX,IAAmBR,IAAnB,EAAyB;MACvB,IAAIA,IAAI,CAACQ,IAAD,CAAJ,GAAa,CAAjB,EAAoB;QAClB,IAAIC,MAAM,GAAG;UACXC,KAAK,EAAEF,IADI;UAEXG,KAAK,EAAEX,IAAI,CAACQ,IAAD,CAFA;UAGXI,GAAG,EAAEC,MAAM,CAACN,OAAD;QAHA,CAAb;QAKAR,OAAO,CAACe,MAAM,IAAI,CAAC,GAAGA,MAAJ,EAAYL,MAAZ,CAAX,CAAP;QACAF,OAAO;QACPQ,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BlB,IAA7B;MACD;IACF;EACF,CAnBQ,EAmBN,EAnBM,CAAT;EAqBAmB,UAAU,CAAC,MAAM;IACfF,OAAO,CAACC,GAAR,CAAYlB,IAAZ;EACD,CAFS,EAEP,IAFO,CAAV;;EAGA,MAAMoB,WAAW,GAAG,MAAM;IACxB,IAAIpB,IAAI,CAACI,MAAL,GAAc,CAAlB,EAAqB;MACnB,oBACE;QAAA,uBACE,QAAC,QAAD;UAAU,OAAO,EAAE,EAAnB;UAAuB,OAAO,EAAE,EAAhC;UAAoC,IAAI,EAAEJ;QAA1C;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF;IAKD,CAND,MAMO;MACL,oBACE;QAAA,uBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF;IAKD;EACF,CAdD;;EAgBA,oBACE;IAAA,WACG,GADH,eAEE,QAAC,WAAD;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD,CArDM;;GAAML,S;UACWF,W;;;KADXE,S"},"metadata":{},"sourceType":"module"}