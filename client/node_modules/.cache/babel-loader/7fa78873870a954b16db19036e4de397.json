{"ast":null,"code":"var _jsxFileName = \"/Users/galenholgate/Desktop/TwitchCRUDProject/client/src/components/Messages/Messages.js\",\n    _s = $RefreshSig$();\n\nimport styles from './styles.module.css';\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useNavigate, useParams, useLocation } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getMessageList, liveMessageUpdateAsync, getMessageListAsync } from 'features/messagesSlice';\nimport { io } from 'socket.io-client';\nimport { WordCloudMemo, Sentiment } from 'components';\nimport classNames from 'classnames';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Messages = () => {\n  _s();\n\n  let socket;\n  let location = useLocation();\n  let currentUser = location.state.name;\n  let id = location.state.id;\n  useEffect(() => {\n    socket = io('http://localhost:3001', {\n      transports: ['websocket']\n    });\n    dispatch(getMessageListAsync(currentUser, id));\n  }, [id]);\n  const dispatch = useDispatch();\n  let currentMessages = useSelector(state => state.messages.messageList);\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n\n  useEffect(scrollToBottom, [currentMessages]);\n  useEffect(() => {\n    socket.on(`${currentUser}`, data => {\n      dispatch(liveMessageUpdateAsync(currentUser, id));\n    });\n  }, [socket]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.main,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [' ', \"You have tracked \", currentMessages.length, \" messages in \", currentUser, \"'s chat\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.rowgrid,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: currentMessages.length > 0 ? /*#__PURE__*/_jsxDEV(Sentiment, {\n          messages: currentMessages,\n          id: id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this) : 'Grabbing messages'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.chatmessages,\n        children: [currentMessages.map((val, key) => {\n          console.log('messagesjs', val);\n          let sentimentClass;\n          if (val.sentiment > 0) sentimentClass = styles.positive;else if (val.sentiment < 0) sentimentClass = styles.negative;else sentimentClass = styles.neutral;\n          console.log(sentimentClass);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [' ', /*#__PURE__*/_jsxDEV(\"span\", {\n                className: classNames(styles.text, sentimentClass),\n                children: [' ', /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: val.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 21\n                }, this), ' ']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 19\n              }, this)]\n            }, val.messages_id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.wordcloud,\n        children: currentMessages.length > 0 ? /*#__PURE__*/_jsxDEV(WordCloudMemo, {\n          user: currentUser,\n          id: id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this) : 'Grabbing messages'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Messages, \"kIIOcT7KjnDcs5d2a5snowv3wI4=\", false, function () {\n  return [useLocation, useDispatch, useSelector];\n});\n\n_c = Messages;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"names":["styles","React","useEffect","useState","useRef","useNavigate","useParams","useLocation","useDispatch","useSelector","getMessageList","liveMessageUpdateAsync","getMessageListAsync","io","WordCloudMemo","Sentiment","classNames","Messages","socket","location","currentUser","state","name","id","transports","dispatch","currentMessages","messages","messageList","messagesEndRef","scrollToBottom","current","scrollIntoView","behavior","on","data","main","length","rowgrid","chatmessages","map","val","key","console","log","sentimentClass","sentiment","positive","negative","neutral","text","message","messages_id","wordcloud"],"sources":["/Users/galenholgate/Desktop/TwitchCRUDProject/client/src/components/Messages/Messages.js"],"sourcesContent":["import styles from './styles.module.css';\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useNavigate, useParams, useLocation } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  getMessageList,\n  liveMessageUpdateAsync,\n  getMessageListAsync,\n} from 'features/messagesSlice';\nimport { io } from 'socket.io-client';\nimport { WordCloudMemo, Sentiment } from 'components';\nimport classNames from 'classnames';\n\nexport const Messages = () => {\n  let socket;\n\n  let location = useLocation();\n  let currentUser = location.state.name;\n  let id = location.state.id;\n\n  useEffect(() => {\n    socket = io('http://localhost:3001', {\n      transports: ['websocket'],\n    });\n    dispatch(getMessageListAsync(currentUser, id));\n  }, [id]);\n\n  const dispatch = useDispatch();\n  let currentMessages = useSelector(state => state.messages.messageList);\n\n  const messagesEndRef = useRef(null);\n  const scrollToBottom = () => {\n    messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\n  };\n  useEffect(scrollToBottom, [currentMessages]);\n\n  useEffect(() => {\n    socket.on(`${currentUser}`, data => {\n      dispatch(liveMessageUpdateAsync(currentUser, id));\n    });\n  }, [socket]);\n\n  return (\n    <div className={styles.main}>\n      <h1>\n        {' '}\n        You have tracked {currentMessages.length} messages in {currentUser}\n        's chat\n      </h1>\n\n      <div className={styles.rowgrid}>\n        <div>\n          {currentMessages.length > 0 ? (\n            <Sentiment messages={currentMessages} id={id} />\n          ) : (\n            'Grabbing messages'\n          )}\n        </div>\n        <div className={styles.chatmessages}>\n          {currentMessages.map((val, key) => {\n            console.log('messagesjs', val);\n            let sentimentClass;\n            if (val.sentiment > 0) sentimentClass = styles.positive;\n            else if (val.sentiment < 0) sentimentClass = styles.negative;\n            else sentimentClass = styles.neutral;\n            console.log(sentimentClass);\n            return (\n              <div>\n                <hr />\n                <div key={val.messages_id}>\n                  {' '}\n                  <span\n                    className={classNames(styles.text, sentimentClass)}\n                  >\n                    {' '}\n                    <p>{val.message}</p>{' '}\n                  </span>\n                </div>\n              </div>\n            );\n          })}\n          <div ref={messagesEndRef} />\n        </div>\n\n        <div className={styles.wordcloud}>\n          {currentMessages.length > 0 ? (\n            <WordCloudMemo user={currentUser} id={id} />\n          ) : (\n            'Grabbing messages'\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,WAAjC,QAAoD,kBAApD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACEC,cADF,EAEEC,sBAFF,EAGEC,mBAHF,QAIO,wBAJP;AAKA,SAASC,EAAT,QAAmB,kBAAnB;AACA,SAASC,aAAT,EAAwBC,SAAxB,QAAyC,YAAzC;AACA,OAAOC,UAAP,MAAuB,YAAvB;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EAC5B,IAAIC,MAAJ;EAEA,IAAIC,QAAQ,GAAGZ,WAAW,EAA1B;EACA,IAAIa,WAAW,GAAGD,QAAQ,CAACE,KAAT,CAAeC,IAAjC;EACA,IAAIC,EAAE,GAAGJ,QAAQ,CAACE,KAAT,CAAeE,EAAxB;EAEArB,SAAS,CAAC,MAAM;IACdgB,MAAM,GAAGL,EAAE,CAAC,uBAAD,EAA0B;MACnCW,UAAU,EAAE,CAAC,WAAD;IADuB,CAA1B,CAAX;IAGAC,QAAQ,CAACb,mBAAmB,CAACQ,WAAD,EAAcG,EAAd,CAApB,CAAR;EACD,CALQ,EAKN,CAACA,EAAD,CALM,CAAT;EAOA,MAAME,QAAQ,GAAGjB,WAAW,EAA5B;EACA,IAAIkB,eAAe,GAAGjB,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACM,QAAN,CAAeC,WAAzB,CAAjC;EAEA,MAAMC,cAAc,GAAGzB,MAAM,CAAC,IAAD,CAA7B;;EACA,MAAM0B,cAAc,GAAG,MAAM;IAC3BD,cAAc,CAACE,OAAf,CAAuBC,cAAvB,CAAsC;MAAEC,QAAQ,EAAE;IAAZ,CAAtC;EACD,CAFD;;EAGA/B,SAAS,CAAC4B,cAAD,EAAiB,CAACJ,eAAD,CAAjB,CAAT;EAEAxB,SAAS,CAAC,MAAM;IACdgB,MAAM,CAACgB,EAAP,CAAW,GAAEd,WAAY,EAAzB,EAA4Be,IAAI,IAAI;MAClCV,QAAQ,CAACd,sBAAsB,CAACS,WAAD,EAAcG,EAAd,CAAvB,CAAR;IACD,CAFD;EAGD,CAJQ,EAIN,CAACL,MAAD,CAJM,CAAT;EAMA,oBACE;IAAK,SAAS,EAAElB,MAAM,CAACoC,IAAvB;IAAA,wBACE;MAAA,WACG,GADH,uBAEoBV,eAAe,CAACW,MAFpC,mBAEyDjB,WAFzD;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAOE;MAAK,SAAS,EAAEpB,MAAM,CAACsC,OAAvB;MAAA,wBACE;QAAA,UACGZ,eAAe,CAACW,MAAhB,GAAyB,CAAzB,gBACC,QAAC,SAAD;UAAW,QAAQ,EAAEX,eAArB;UAAsC,EAAE,EAAEH;QAA1C;UAAA;UAAA;UAAA;QAAA,QADD,GAGC;MAJJ;QAAA;QAAA;QAAA;MAAA,QADF,eAQE;QAAK,SAAS,EAAEvB,MAAM,CAACuC,YAAvB;QAAA,WACGb,eAAe,CAACc,GAAhB,CAAoB,CAACC,GAAD,EAAMC,GAAN,KAAc;UACjCC,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BH,GAA1B;UACA,IAAII,cAAJ;UACA,IAAIJ,GAAG,CAACK,SAAJ,GAAgB,CAApB,EAAuBD,cAAc,GAAG7C,MAAM,CAAC+C,QAAxB,CAAvB,KACK,IAAIN,GAAG,CAACK,SAAJ,GAAgB,CAApB,EAAuBD,cAAc,GAAG7C,MAAM,CAACgD,QAAxB,CAAvB,KACAH,cAAc,GAAG7C,MAAM,CAACiD,OAAxB;UACLN,OAAO,CAACC,GAAR,CAAYC,cAAZ;UACA,oBACE;YAAA,wBACE;cAAA;cAAA;cAAA;YAAA,QADF,eAEE;cAAA,WACG,GADH,eAEE;gBACE,SAAS,EAAE7B,UAAU,CAAChB,MAAM,CAACkD,IAAR,EAAcL,cAAd,CADvB;gBAAA,WAGG,GAHH,eAIE;kBAAA,UAAIJ,GAAG,CAACU;gBAAR;kBAAA;kBAAA;kBAAA;gBAAA,QAJF,EAIuB,GAJvB;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAFF;YAAA,GAAUV,GAAG,CAACW,WAAd;cAAA;cAAA;cAAA;YAAA,QAFF;UAAA;YAAA;YAAA;YAAA;UAAA,QADF;QAcD,CArBA,CADH,eAuBE;UAAK,GAAG,EAAEvB;QAAV;UAAA;UAAA;UAAA;QAAA,QAvBF;MAAA;QAAA;QAAA;QAAA;MAAA,QARF,eAkCE;QAAK,SAAS,EAAE7B,MAAM,CAACqD,SAAvB;QAAA,UACG3B,eAAe,CAACW,MAAhB,GAAyB,CAAzB,gBACC,QAAC,aAAD;UAAe,IAAI,EAAEjB,WAArB;UAAkC,EAAE,EAAEG;QAAtC;UAAA;UAAA;UAAA;QAAA,QADD,GAGC;MAJJ;QAAA;QAAA;QAAA;MAAA,QAlCF;IAAA;MAAA;MAAA;MAAA;IAAA,QAPF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAoDD,CAjFM;;GAAMN,Q;UAGIV,W,EAWEC,W,EACKC,W;;;KAfXQ,Q"},"metadata":{},"sourceType":"module"}