{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport Axios from 'axios';\nconst API_GET_USER = 'http://localhost:3001/users';\nconst API_ADD_USER = 'http://localhost:3001/create';\nexport const usersSlice = createSlice({\n  name: 'user',\n  initialState: {\n    userList: []\n  },\n  reducers: {\n    getUserList: (state, action) => {\n      state.userList = [action.payload];\n    },\n    addUser: (state, action) => {\n      state.userList.push(action.payload);\n    }\n  }\n});\nexport const getUserListAsync = data => async dispatch => {\n  try {\n    const response = await Axios.get(API_GET_USER);\n    console.log('GetUserList Async', response);\n    dispatch(getUserList(response.data));\n  } catch (err) {\n    throw new Error(err);\n  }\n};\nexport const addUserAsync = data => async dispatch => {\n  try {\n    const response = await Axios.post(API_ADD_USER, {\n      userName: data\n    });\n    dispatch(addUser(response.data));\n  } catch (err) {\n    throw new Error(err);\n  }\n};\nexport const {\n  getUserList,\n  addUser\n} = usersSlice.actions;\nexport const showUserList = state => state.users.userList;\nexport default usersSlice.reducer;","map":{"version":3,"names":["createSlice","Axios","API_GET_USER","API_ADD_USER","usersSlice","name","initialState","userList","reducers","getUserList","state","action","payload","addUser","push","getUserListAsync","data","dispatch","response","get","console","log","err","Error","addUserAsync","post","userName","actions","showUserList","users","reducer"],"sources":["/Users/galenholgate/Desktop/TwitchCRUDProject/client/src/features/usersSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nimport Axios from 'axios';\nconst API_GET_USER = 'http://localhost:3001/users';\nconst API_ADD_USER = 'http://localhost:3001/create';\n\nexport const usersSlice = createSlice({\n  name: 'user',\n  initialState: {\n    userList: [],\n  },\n\n  reducers: {\n    getUserList: (state, action) => {\n      state.userList = [action.payload];\n    },\n    addUser: (state, action) => {\n      state.userList.push(action.payload);\n    },\n  },\n});\n\nexport const getUserListAsync = data => async dispatch => {\n  try {\n    const response = await Axios.get(API_GET_USER);\n    console.log('GetUserList Async', response);\n    dispatch(getUserList(response.data));\n  } catch (err) {\n    throw new Error(err);\n  }\n};\n\nexport const addUserAsync = data => async dispatch => {\n  try {\n    const response = await Axios.post(API_ADD_USER, {\n      userName: data,\n    });\n    dispatch(addUser(response.data));\n  } catch (err) {\n    throw new Error(err);\n  }\n};\n\nexport const { getUserList, addUser } = usersSlice.actions;\nexport const showUserList = state => state.users.userList;\nexport default usersSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,MAAMC,YAAY,GAAG,6BAArB;AACA,MAAMC,YAAY,GAAG,8BAArB;AAEA,OAAO,MAAMC,UAAU,GAAGJ,WAAW,CAAC;EACpCK,IAAI,EAAE,MAD8B;EAEpCC,YAAY,EAAE;IACZC,QAAQ,EAAE;EADE,CAFsB;EAMpCC,QAAQ,EAAE;IACRC,WAAW,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC9BD,KAAK,CAACH,QAAN,GAAiB,CAACI,MAAM,CAACC,OAAR,CAAjB;IACD,CAHO;IAIRC,OAAO,EAAE,CAACH,KAAD,EAAQC,MAAR,KAAmB;MAC1BD,KAAK,CAACH,QAAN,CAAeO,IAAf,CAAoBH,MAAM,CAACC,OAA3B;IACD;EANO;AAN0B,CAAD,CAA9B;AAgBP,OAAO,MAAMG,gBAAgB,GAAGC,IAAI,IAAI,MAAMC,QAAN,IAAkB;EACxD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,GAAN,CAAUjB,YAAV,CAAvB;IACAkB,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCH,QAAjC;IACAD,QAAQ,CAACR,WAAW,CAACS,QAAQ,CAACF,IAAV,CAAZ,CAAR;EACD,CAJD,CAIE,OAAOM,GAAP,EAAY;IACZ,MAAM,IAAIC,KAAJ,CAAUD,GAAV,CAAN;EACD;AACF,CARM;AAUP,OAAO,MAAME,YAAY,GAAGR,IAAI,IAAI,MAAMC,QAAN,IAAkB;EACpD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMjB,KAAK,CAACwB,IAAN,CAAWtB,YAAX,EAAyB;MAC9CuB,QAAQ,EAAEV;IADoC,CAAzB,CAAvB;IAGAC,QAAQ,CAACJ,OAAO,CAACK,QAAQ,CAACF,IAAV,CAAR,CAAR;EACD,CALD,CAKE,OAAOM,GAAP,EAAY;IACZ,MAAM,IAAIC,KAAJ,CAAUD,GAAV,CAAN;EACD;AACF,CATM;AAWP,OAAO,MAAM;EAAEb,WAAF;EAAeI;AAAf,IAA2BT,UAAU,CAACuB,OAA5C;AACP,OAAO,MAAMC,YAAY,GAAGlB,KAAK,IAAIA,KAAK,CAACmB,KAAN,CAAYtB,QAA1C;AACP,eAAeH,UAAU,CAAC0B,OAA1B"},"metadata":{},"sourceType":"module"}