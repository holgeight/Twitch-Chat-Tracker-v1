{"ast":null,"code":"var _jsxFileName = \"/Users/galenholgate/Desktop/TwitchCRUDProject/client/src/components/Messages/Messages.js\",\n    _s = $RefreshSig$();\n\nimport styles from './styles.module.css';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams, useLocation } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getMessageList, liveMessageUpdate, getMessageListAsync } from 'features/messagesSlice';\nimport { io } from 'socket.io-client';\nimport { current } from 'immer';\nimport { store } from 'store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Messages = () => {\n  _s();\n\n  let socket;\n  let location = useLocation();\n  let currentUser = location.state.name;\n  let id = location.state.id;\n  const dispatch = useDispatch();\n  let currentMessages = useSelector(state => state.messages.messageList);\n  console.log('MESSAGESJS', currentMessages);\n  console.log(currentUser);\n  useEffect(() => {\n    socket = io('http://localhost:3001', {\n      transports: ['websocket']\n    });\n    dispatch(getMessageListAsync(currentUser, id));\n  }, []);\n  useEffect(() => {\n    socket.on(`${currentUser}`, data => {\n      console.log('I received a notice from teh server', data);\n      dispatch(liveMessageUpdate(data));\n    });\n  }, [socket]); // new useEffect that runs when socket.on(`${currentUser}`)\n  // dispatches new MessageSlice liveMessageUpdate\n  // , [socket]\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: currentMessages.map((val, key) => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", val.message, \" \"]\n      }, val.messages_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Messages, \"1YVqUnGxf2RZvn2yEe2lDbQnUEQ=\", false, function () {\n  return [useLocation, useDispatch, useSelector];\n});\n\n_c = Messages;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"names":["styles","React","useEffect","useState","useNavigate","useParams","useLocation","useDispatch","useSelector","getMessageList","liveMessageUpdate","getMessageListAsync","io","current","store","Messages","socket","location","currentUser","state","name","id","dispatch","currentMessages","messages","messageList","console","log","transports","on","data","map","val","key","message","messages_id"],"sources":["/Users/galenholgate/Desktop/TwitchCRUDProject/client/src/components/Messages/Messages.js"],"sourcesContent":["import styles from './styles.module.css';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams, useLocation } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  getMessageList,\n  liveMessageUpdate,\n  getMessageListAsync,\n} from 'features/messagesSlice';\nimport { io } from 'socket.io-client';\nimport { current } from 'immer';\nimport { store } from 'store';\n\nexport const Messages = () => {\n  let socket;\n\n  let location = useLocation();\n  let currentUser = location.state.name;\n  let id = location.state.id;\n\n  const dispatch = useDispatch();\n  let currentMessages = useSelector(state => state.messages.messageList);\n  console.log('MESSAGESJS', currentMessages);\n  console.log(currentUser);\n\n  useEffect(() => {\n    socket = io('http://localhost:3001', {\n      transports: ['websocket'],\n    });\n    dispatch(getMessageListAsync(currentUser, id));\n  }, []);\n\n  useEffect(() => {\n    socket.on(`${currentUser}`, data => {\n      console.log('I received a notice from teh server', data);\n      dispatch(liveMessageUpdate(data));\n    });\n  }, [socket]);\n\n  // new useEffect that runs when socket.on(`${currentUser}`)\n  // dispatches new MessageSlice liveMessageUpdate\n  // , [socket]\n\n  return (\n    <div>\n      {currentMessages.map((val, key) => {\n        return <p key={val.messages_id}> {val.message} </p>;\n      })}\n    </div>\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,WAAjC,QAAoD,kBAApD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACEC,cADF,EAEEC,iBAFF,EAGEC,mBAHF,QAIO,wBAJP;AAKA,SAASC,EAAT,QAAmB,kBAAnB;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,KAAT,QAAsB,OAAtB;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EAC5B,IAAIC,MAAJ;EAEA,IAAIC,QAAQ,GAAGX,WAAW,EAA1B;EACA,IAAIY,WAAW,GAAGD,QAAQ,CAACE,KAAT,CAAeC,IAAjC;EACA,IAAIC,EAAE,GAAGJ,QAAQ,CAACE,KAAT,CAAeE,EAAxB;EAEA,MAAMC,QAAQ,GAAGf,WAAW,EAA5B;EACA,IAAIgB,eAAe,GAAGf,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACK,QAAN,CAAeC,WAAzB,CAAjC;EACAC,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BJ,eAA1B;EACAG,OAAO,CAACC,GAAR,CAAYT,WAAZ;EAEAhB,SAAS,CAAC,MAAM;IACdc,MAAM,GAAGJ,EAAE,CAAC,uBAAD,EAA0B;MACnCgB,UAAU,EAAE,CAAC,WAAD;IADuB,CAA1B,CAAX;IAGAN,QAAQ,CAACX,mBAAmB,CAACO,WAAD,EAAcG,EAAd,CAApB,CAAR;EACD,CALQ,EAKN,EALM,CAAT;EAOAnB,SAAS,CAAC,MAAM;IACdc,MAAM,CAACa,EAAP,CAAW,GAAEX,WAAY,EAAzB,EAA4BY,IAAI,IAAI;MAClCJ,OAAO,CAACC,GAAR,CAAY,qCAAZ,EAAmDG,IAAnD;MACAR,QAAQ,CAACZ,iBAAiB,CAACoB,IAAD,CAAlB,CAAR;IACD,CAHD;EAID,CALQ,EAKN,CAACd,MAAD,CALM,CAAT,CAnB4B,CA0B5B;EACA;EACA;;EAEA,oBACE;IAAA,UACGO,eAAe,CAACQ,GAAhB,CAAoB,CAACC,GAAD,EAAMC,GAAN,KAAc;MACjC,oBAAO;QAAA,gBAA2BD,GAAG,CAACE,OAA/B;MAAA,GAAQF,GAAG,CAACG,WAAZ;QAAA;QAAA;QAAA;MAAA,QAAP;IACD,CAFA;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAOD,CArCM;;GAAMpB,Q;UAGIT,W,EAIEC,W,EACKC,W;;;KARXO,Q"},"metadata":{},"sourceType":"module"}