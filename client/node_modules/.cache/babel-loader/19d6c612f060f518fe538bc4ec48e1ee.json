{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport Axios from 'axios';\nconst API_GET_MSG = 'http://localhost:3001/messages';\nexport const messagesSlice = createSlice({\n  name: 'messages',\n  initialState: {\n    messageList: []\n  },\n  reducers: {\n    getMessageList: (state, action) => {\n      state.messageList = action.payload;\n    },\n    liveMessageUpdate: (state, action) => {\n      state.messageList.push(action.payload);\n    } // new reducer, liveMessageUpdate?\n    // state.messageList.push? action.payload\n\n  }\n});\nexport const getMessageListAsync = (name, id) => async dispatch => {\n  try {\n    const response = await Axios.get(API_GET_MSG, {\n      params: {\n        user: name,\n        id: id\n      }\n    });\n    console.log('GetMSGList Async', response);\n\n    if (response.status === 200) {\n      console.log('async GETUSER success');\n      dispatch(getMessageList(response.data));\n      return true;\n    }\n\n    return false;\n  } catch (err) {\n    console.log(err);\n    throw new Error(err);\n  }\n};\nexport const {\n  getMessageList\n} = messagesSlice.actions;\nexport const showMessageList = state => state.messages.messageList;\nexport default messagesSlice.reducer;","map":{"version":3,"names":["createSlice","Axios","API_GET_MSG","messagesSlice","name","initialState","messageList","reducers","getMessageList","state","action","payload","liveMessageUpdate","push","getMessageListAsync","id","dispatch","response","get","params","user","console","log","status","data","err","Error","actions","showMessageList","messages","reducer"],"sources":["/Users/galenholgate/Desktop/TwitchCRUDProject/client/src/features/messagesSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nimport Axios from 'axios';\nconst API_GET_MSG = 'http://localhost:3001/messages';\n\nexport const messagesSlice = createSlice({\n  name: 'messages',\n  initialState: {\n    messageList: [],\n  },\n\n  reducers: {\n    getMessageList: (state, action) => {\n      state.messageList = action.payload;\n    },\n    liveMessageUpdate: (state, action) => {\n      state.messageList.push(action.payload);\n    },\n    // new reducer, liveMessageUpdate?\n    // state.messageList.push? action.payload\n  },\n});\n\nexport const getMessageListAsync = (name, id) => async dispatch => {\n  try {\n    const response = await Axios.get(API_GET_MSG, {\n      params: {\n        user: name,\n        id: id,\n      },\n    });\n    console.log('GetMSGList Async', response);\n    if (response.status === 200) {\n      console.log('async GETUSER success');\n      dispatch(getMessageList(response.data));\n      return true;\n    }\n    return false;\n  } catch (err) {\n    console.log(err);\n    throw new Error(err);\n  }\n};\n\nexport const { getMessageList } = messagesSlice.actions;\nexport const showMessageList = state => state.messages.messageList;\nexport default messagesSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,MAAMC,WAAW,GAAG,gCAApB;AAEA,OAAO,MAAMC,aAAa,GAAGH,WAAW,CAAC;EACvCI,IAAI,EAAE,UADiC;EAEvCC,YAAY,EAAE;IACZC,WAAW,EAAE;EADD,CAFyB;EAMvCC,QAAQ,EAAE;IACRC,cAAc,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MACjCD,KAAK,CAACH,WAAN,GAAoBI,MAAM,CAACC,OAA3B;IACD,CAHO;IAIRC,iBAAiB,EAAE,CAACH,KAAD,EAAQC,MAAR,KAAmB;MACpCD,KAAK,CAACH,WAAN,CAAkBO,IAAlB,CAAuBH,MAAM,CAACC,OAA9B;IACD,CANO,CAOR;IACA;;EARQ;AAN6B,CAAD,CAAjC;AAkBP,OAAO,MAAMG,mBAAmB,GAAG,CAACV,IAAD,EAAOW,EAAP,KAAc,MAAMC,QAAN,IAAkB;EACjE,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAN,CAAUhB,WAAV,EAAuB;MAC5CiB,MAAM,EAAE;QACNC,IAAI,EAAEhB,IADA;QAENW,EAAE,EAAEA;MAFE;IADoC,CAAvB,CAAvB;IAMAM,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCL,QAAhC;;IACA,IAAIA,QAAQ,CAACM,MAAT,KAAoB,GAAxB,EAA6B;MAC3BF,OAAO,CAACC,GAAR,CAAY,uBAAZ;MACAN,QAAQ,CAACR,cAAc,CAACS,QAAQ,CAACO,IAAV,CAAf,CAAR;MACA,OAAO,IAAP;IACD;;IACD,OAAO,KAAP;EACD,CAdD,CAcE,OAAOC,GAAP,EAAY;IACZJ,OAAO,CAACC,GAAR,CAAYG,GAAZ;IACA,MAAM,IAAIC,KAAJ,CAAUD,GAAV,CAAN;EACD;AACF,CAnBM;AAqBP,OAAO,MAAM;EAAEjB;AAAF,IAAqBL,aAAa,CAACwB,OAAzC;AACP,OAAO,MAAMC,eAAe,GAAGnB,KAAK,IAAIA,KAAK,CAACoB,QAAN,CAAevB,WAAhD;AACP,eAAeH,aAAa,CAAC2B,OAA7B"},"metadata":{},"sourceType":"module"}